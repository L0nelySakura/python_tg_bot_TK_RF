from aiogram import Router, types
from aiogram.filters import Command
from internal.config.config import HISTORY_LIMIT
from internal.services.gigachat_service import ask_gigachat
from internal.services.db_service import save_message, get_history, clear_history

router = Router()


@router.message(Command("clear"))
async def clear_user_history(message: types.Message):
    user_id = message.from_user.id
    await clear_history(user_id)
    print(f"[INFO] –û—á–∏—â–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    await message.answer("‚úÖ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞.")
    await message.answer(
        "ü§ñ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø - –±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –¢–ö –†–§.\n"
        "üìú –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –¥–∞–º –æ—Ç–≤–µ—Ç \n"
        "–ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å '–∏—Å—Ç–æ—Ä–∏—é' —á–∞—Ç–∞, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /clear"
    )


@router.message()
async def handle_question(message: types.Message):
    user_id = message.from_user.id
    print(f"[INFO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {message.text}")
    history = await get_history(user_id, limit=HISTORY_LIMIT)

    processing_msg = await message.answer("‚åõ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    answer = await ask_gigachat(message.text, history)
    if answer is not ("üõë –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –º–æ–≥—É –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –†–§.\n"
                      "–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –†–§, "
                      "–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é /clear –∏ —Å–Ω–æ–≤–∞ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å."):
        try:
            print(f"[INFO] –°–æ—Ö—Ä–∞–Ω—è—é –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
            await save_message(user_id, "user", message.text)
            await save_message(user_id, "ai", answer)
            print(f"[INFO] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ.")
        except Exception as e:
            print(f"[WARN] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏: {e}")

    await processing_msg.edit_text(answer)
